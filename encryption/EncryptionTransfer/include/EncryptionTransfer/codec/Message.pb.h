// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Message.proto

#ifndef PROTOBUF_INCLUDED_Message_2eproto
#define PROTOBUF_INCLUDED_Message_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_Message_2eproto 

namespace protobuf_Message_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[4];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_Message_2eproto
class PingReq;
class PingReqDefaultTypeInternal;
extern PingReqDefaultTypeInternal _PingReq_default_instance_;
class PingResp;
class PingRespDefaultTypeInternal;
extern PingRespDefaultTypeInternal _PingResp_default_instance_;
class RequestMsg;
class RequestMsgDefaultTypeInternal;
extern RequestMsgDefaultTypeInternal _RequestMsg_default_instance_;
class ResponseMsg;
class ResponseMsgDefaultTypeInternal;
extern ResponseMsgDefaultTypeInternal _ResponseMsg_default_instance_;
namespace google {
namespace protobuf {
template<> ::PingReq* Arena::CreateMaybeMessage<::PingReq>(Arena*);
template<> ::PingResp* Arena::CreateMaybeMessage<::PingResp>(Arena*);
template<> ::RequestMsg* Arena::CreateMaybeMessage<::RequestMsg>(Arena*);
template<> ::ResponseMsg* Arena::CreateMaybeMessage<::ResponseMsg>(Arena*);
}  // namespace protobuf
}  // namespace google

// ===================================================================

class RequestMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:RequestMsg) */ {
 public:
  RequestMsg();
  virtual ~RequestMsg();

  RequestMsg(const RequestMsg& from);

  inline RequestMsg& operator=(const RequestMsg& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RequestMsg(RequestMsg&& from) noexcept
    : RequestMsg() {
    *this = ::std::move(from);
  }

  inline RequestMsg& operator=(RequestMsg&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const RequestMsg& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RequestMsg* internal_default_instance() {
    return reinterpret_cast<const RequestMsg*>(
               &_RequestMsg_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(RequestMsg* other);
  friend void swap(RequestMsg& a, RequestMsg& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RequestMsg* New() const final {
    return CreateMaybeMessage<RequestMsg>(NULL);
  }

  RequestMsg* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<RequestMsg>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const RequestMsg& from);
  void MergeFrom(const RequestMsg& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RequestMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes clientID = 2;
  void clear_clientid();
  static const int kClientIDFieldNumber = 2;
  const ::std::string& clientid() const;
  void set_clientid(const ::std::string& value);
  #if LANG_CXX11
  void set_clientid(::std::string&& value);
  #endif
  void set_clientid(const char* value);
  void set_clientid(const void* value, size_t size);
  ::std::string* mutable_clientid();
  ::std::string* release_clientid();
  void set_allocated_clientid(::std::string* clientid);

  // bytes serverID = 4;
  void clear_serverid();
  static const int kServerIDFieldNumber = 4;
  const ::std::string& serverid() const;
  void set_serverid(const ::std::string& value);
  #if LANG_CXX11
  void set_serverid(::std::string&& value);
  #endif
  void set_serverid(const char* value);
  void set_serverid(const void* value, size_t size);
  ::std::string* mutable_serverid();
  ::std::string* release_serverid();
  void set_allocated_serverid(::std::string* serverid);

  // bytes sign = 5;
  void clear_sign();
  static const int kSignFieldNumber = 5;
  const ::std::string& sign() const;
  void set_sign(const ::std::string& value);
  #if LANG_CXX11
  void set_sign(::std::string&& value);
  #endif
  void set_sign(const char* value);
  void set_sign(const void* value, size_t size);
  ::std::string* mutable_sign();
  ::std::string* release_sign();
  void set_allocated_sign(::std::string* sign);

  // bytes data = 6;
  void clear_data();
  static const int kDataFieldNumber = 6;
  const ::std::string& data() const;
  void set_data(const ::std::string& value);
  #if LANG_CXX11
  void set_data(::std::string&& value);
  #endif
  void set_data(const char* value);
  void set_data(const void* value, size_t size);
  ::std::string* mutable_data();
  ::std::string* release_data();
  void set_allocated_data(::std::string* data);

  // int32 cmdType = 1;
  void clear_cmdtype();
  static const int kCmdTypeFieldNumber = 1;
  ::google::protobuf::int32 cmdtype() const;
  void set_cmdtype(::google::protobuf::int32 value);

  // int32 timestamp = 3;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 3;
  ::google::protobuf::int32 timestamp() const;
  void set_timestamp(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:RequestMsg)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr clientid_;
  ::google::protobuf::internal::ArenaStringPtr serverid_;
  ::google::protobuf::internal::ArenaStringPtr sign_;
  ::google::protobuf::internal::ArenaStringPtr data_;
  ::google::protobuf::int32 cmdtype_;
  ::google::protobuf::int32 timestamp_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_Message_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ResponseMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ResponseMsg) */ {
 public:
  ResponseMsg();
  virtual ~ResponseMsg();

  ResponseMsg(const ResponseMsg& from);

  inline ResponseMsg& operator=(const ResponseMsg& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ResponseMsg(ResponseMsg&& from) noexcept
    : ResponseMsg() {
    *this = ::std::move(from);
  }

  inline ResponseMsg& operator=(ResponseMsg&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ResponseMsg& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ResponseMsg* internal_default_instance() {
    return reinterpret_cast<const ResponseMsg*>(
               &_ResponseMsg_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(ResponseMsg* other);
  friend void swap(ResponseMsg& a, ResponseMsg& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ResponseMsg* New() const final {
    return CreateMaybeMessage<ResponseMsg>(NULL);
  }

  ResponseMsg* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ResponseMsg>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ResponseMsg& from);
  void MergeFrom(const ResponseMsg& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ResponseMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes clientID = 4;
  void clear_clientid();
  static const int kClientIDFieldNumber = 4;
  const ::std::string& clientid() const;
  void set_clientid(const ::std::string& value);
  #if LANG_CXX11
  void set_clientid(::std::string&& value);
  #endif
  void set_clientid(const char* value);
  void set_clientid(const void* value, size_t size);
  ::std::string* mutable_clientid();
  ::std::string* release_clientid();
  void set_allocated_clientid(::std::string* clientid);

  // bytes serverID = 6;
  void clear_serverid();
  static const int kServerIDFieldNumber = 6;
  const ::std::string& serverid() const;
  void set_serverid(const ::std::string& value);
  #if LANG_CXX11
  void set_serverid(::std::string&& value);
  #endif
  void set_serverid(const char* value);
  void set_serverid(const void* value, size_t size);
  ::std::string* mutable_serverid();
  ::std::string* release_serverid();
  void set_allocated_serverid(::std::string* serverid);

  // bytes data = 7;
  void clear_data();
  static const int kDataFieldNumber = 7;
  const ::std::string& data() const;
  void set_data(const ::std::string& value);
  #if LANG_CXX11
  void set_data(::std::string&& value);
  #endif
  void set_data(const char* value);
  void set_data(const void* value, size_t size);
  ::std::string* mutable_data();
  ::std::string* release_data();
  void set_allocated_data(::std::string* data);

  // int32 cmdType = 1;
  void clear_cmdtype();
  static const int kCmdTypeFieldNumber = 1;
  ::google::protobuf::int32 cmdtype() const;
  void set_cmdtype(::google::protobuf::int32 value);

  // bool status = 2;
  void clear_status();
  static const int kStatusFieldNumber = 2;
  bool status() const;
  void set_status(bool value);

  // int32 secKeyId = 3;
  void clear_seckeyid();
  static const int kSecKeyIdFieldNumber = 3;
  ::google::protobuf::int32 seckeyid() const;
  void set_seckeyid(::google::protobuf::int32 value);

  // int32 timestamp = 5;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 5;
  ::google::protobuf::int32 timestamp() const;
  void set_timestamp(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ResponseMsg)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr clientid_;
  ::google::protobuf::internal::ArenaStringPtr serverid_;
  ::google::protobuf::internal::ArenaStringPtr data_;
  ::google::protobuf::int32 cmdtype_;
  bool status_;
  ::google::protobuf::int32 seckeyid_;
  ::google::protobuf::int32 timestamp_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_Message_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PingReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PingReq) */ {
 public:
  PingReq();
  virtual ~PingReq();

  PingReq(const PingReq& from);

  inline PingReq& operator=(const PingReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PingReq(PingReq&& from) noexcept
    : PingReq() {
    *this = ::std::move(from);
  }

  inline PingReq& operator=(PingReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PingReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PingReq* internal_default_instance() {
    return reinterpret_cast<const PingReq*>(
               &_PingReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(PingReq* other);
  friend void swap(PingReq& a, PingReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PingReq* New() const final {
    return CreateMaybeMessage<PingReq>(NULL);
  }

  PingReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PingReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PingReq& from);
  void MergeFrom(const PingReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PingReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 secondsSinceEpoch = 1;
  void clear_secondssinceepoch();
  static const int kSecondsSinceEpochFieldNumber = 1;
  ::google::protobuf::int32 secondssinceepoch() const;
  void set_secondssinceepoch(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:PingReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 secondssinceepoch_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_Message_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PingResp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PingResp) */ {
 public:
  PingResp();
  virtual ~PingResp();

  PingResp(const PingResp& from);

  inline PingResp& operator=(const PingResp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PingResp(PingResp&& from) noexcept
    : PingResp() {
    *this = ::std::move(from);
  }

  inline PingResp& operator=(PingResp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PingResp& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PingResp* internal_default_instance() {
    return reinterpret_cast<const PingResp*>(
               &_PingResp_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(PingResp* other);
  friend void swap(PingResp& a, PingResp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PingResp* New() const final {
    return CreateMaybeMessage<PingResp>(NULL);
  }

  PingResp* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PingResp>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PingResp& from);
  void MergeFrom(const PingResp& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PingResp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 secondsSinceEpoch = 1;
  void clear_secondssinceepoch();
  static const int kSecondsSinceEpochFieldNumber = 1;
  ::google::protobuf::int32 secondssinceepoch() const;
  void set_secondssinceepoch(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:PingResp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 secondssinceepoch_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_Message_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// RequestMsg

// int32 cmdType = 1;
inline void RequestMsg::clear_cmdtype() {
  cmdtype_ = 0;
}
inline ::google::protobuf::int32 RequestMsg::cmdtype() const {
  // @@protoc_insertion_point(field_get:RequestMsg.cmdType)
  return cmdtype_;
}
inline void RequestMsg::set_cmdtype(::google::protobuf::int32 value) {
  
  cmdtype_ = value;
  // @@protoc_insertion_point(field_set:RequestMsg.cmdType)
}

// bytes clientID = 2;
inline void RequestMsg::clear_clientid() {
  clientid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RequestMsg::clientid() const {
  // @@protoc_insertion_point(field_get:RequestMsg.clientID)
  return clientid_.GetNoArena();
}
inline void RequestMsg::set_clientid(const ::std::string& value) {
  
  clientid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:RequestMsg.clientID)
}
#if LANG_CXX11
inline void RequestMsg::set_clientid(::std::string&& value) {
  
  clientid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:RequestMsg.clientID)
}
#endif
inline void RequestMsg::set_clientid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  clientid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:RequestMsg.clientID)
}
inline void RequestMsg::set_clientid(const void* value, size_t size) {
  
  clientid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:RequestMsg.clientID)
}
inline ::std::string* RequestMsg::mutable_clientid() {
  
  // @@protoc_insertion_point(field_mutable:RequestMsg.clientID)
  return clientid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RequestMsg::release_clientid() {
  // @@protoc_insertion_point(field_release:RequestMsg.clientID)
  
  return clientid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RequestMsg::set_allocated_clientid(::std::string* clientid) {
  if (clientid != NULL) {
    
  } else {
    
  }
  clientid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), clientid);
  // @@protoc_insertion_point(field_set_allocated:RequestMsg.clientID)
}

// int32 timestamp = 3;
inline void RequestMsg::clear_timestamp() {
  timestamp_ = 0;
}
inline ::google::protobuf::int32 RequestMsg::timestamp() const {
  // @@protoc_insertion_point(field_get:RequestMsg.timestamp)
  return timestamp_;
}
inline void RequestMsg::set_timestamp(::google::protobuf::int32 value) {
  
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:RequestMsg.timestamp)
}

// bytes serverID = 4;
inline void RequestMsg::clear_serverid() {
  serverid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RequestMsg::serverid() const {
  // @@protoc_insertion_point(field_get:RequestMsg.serverID)
  return serverid_.GetNoArena();
}
inline void RequestMsg::set_serverid(const ::std::string& value) {
  
  serverid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:RequestMsg.serverID)
}
#if LANG_CXX11
inline void RequestMsg::set_serverid(::std::string&& value) {
  
  serverid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:RequestMsg.serverID)
}
#endif
inline void RequestMsg::set_serverid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  serverid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:RequestMsg.serverID)
}
inline void RequestMsg::set_serverid(const void* value, size_t size) {
  
  serverid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:RequestMsg.serverID)
}
inline ::std::string* RequestMsg::mutable_serverid() {
  
  // @@protoc_insertion_point(field_mutable:RequestMsg.serverID)
  return serverid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RequestMsg::release_serverid() {
  // @@protoc_insertion_point(field_release:RequestMsg.serverID)
  
  return serverid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RequestMsg::set_allocated_serverid(::std::string* serverid) {
  if (serverid != NULL) {
    
  } else {
    
  }
  serverid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), serverid);
  // @@protoc_insertion_point(field_set_allocated:RequestMsg.serverID)
}

// bytes sign = 5;
inline void RequestMsg::clear_sign() {
  sign_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RequestMsg::sign() const {
  // @@protoc_insertion_point(field_get:RequestMsg.sign)
  return sign_.GetNoArena();
}
inline void RequestMsg::set_sign(const ::std::string& value) {
  
  sign_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:RequestMsg.sign)
}
#if LANG_CXX11
inline void RequestMsg::set_sign(::std::string&& value) {
  
  sign_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:RequestMsg.sign)
}
#endif
inline void RequestMsg::set_sign(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  sign_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:RequestMsg.sign)
}
inline void RequestMsg::set_sign(const void* value, size_t size) {
  
  sign_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:RequestMsg.sign)
}
inline ::std::string* RequestMsg::mutable_sign() {
  
  // @@protoc_insertion_point(field_mutable:RequestMsg.sign)
  return sign_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RequestMsg::release_sign() {
  // @@protoc_insertion_point(field_release:RequestMsg.sign)
  
  return sign_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RequestMsg::set_allocated_sign(::std::string* sign) {
  if (sign != NULL) {
    
  } else {
    
  }
  sign_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sign);
  // @@protoc_insertion_point(field_set_allocated:RequestMsg.sign)
}

// bytes data = 6;
inline void RequestMsg::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RequestMsg::data() const {
  // @@protoc_insertion_point(field_get:RequestMsg.data)
  return data_.GetNoArena();
}
inline void RequestMsg::set_data(const ::std::string& value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:RequestMsg.data)
}
#if LANG_CXX11
inline void RequestMsg::set_data(::std::string&& value) {
  
  data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:RequestMsg.data)
}
#endif
inline void RequestMsg::set_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:RequestMsg.data)
}
inline void RequestMsg::set_data(const void* value, size_t size) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:RequestMsg.data)
}
inline ::std::string* RequestMsg::mutable_data() {
  
  // @@protoc_insertion_point(field_mutable:RequestMsg.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RequestMsg::release_data() {
  // @@protoc_insertion_point(field_release:RequestMsg.data)
  
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RequestMsg::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    
  } else {
    
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:RequestMsg.data)
}

// -------------------------------------------------------------------

// ResponseMsg

// int32 cmdType = 1;
inline void ResponseMsg::clear_cmdtype() {
  cmdtype_ = 0;
}
inline ::google::protobuf::int32 ResponseMsg::cmdtype() const {
  // @@protoc_insertion_point(field_get:ResponseMsg.cmdType)
  return cmdtype_;
}
inline void ResponseMsg::set_cmdtype(::google::protobuf::int32 value) {
  
  cmdtype_ = value;
  // @@protoc_insertion_point(field_set:ResponseMsg.cmdType)
}

// bool status = 2;
inline void ResponseMsg::clear_status() {
  status_ = false;
}
inline bool ResponseMsg::status() const {
  // @@protoc_insertion_point(field_get:ResponseMsg.status)
  return status_;
}
inline void ResponseMsg::set_status(bool value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:ResponseMsg.status)
}

// int32 secKeyId = 3;
inline void ResponseMsg::clear_seckeyid() {
  seckeyid_ = 0;
}
inline ::google::protobuf::int32 ResponseMsg::seckeyid() const {
  // @@protoc_insertion_point(field_get:ResponseMsg.secKeyId)
  return seckeyid_;
}
inline void ResponseMsg::set_seckeyid(::google::protobuf::int32 value) {
  
  seckeyid_ = value;
  // @@protoc_insertion_point(field_set:ResponseMsg.secKeyId)
}

// bytes clientID = 4;
inline void ResponseMsg::clear_clientid() {
  clientid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ResponseMsg::clientid() const {
  // @@protoc_insertion_point(field_get:ResponseMsg.clientID)
  return clientid_.GetNoArena();
}
inline void ResponseMsg::set_clientid(const ::std::string& value) {
  
  clientid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ResponseMsg.clientID)
}
#if LANG_CXX11
inline void ResponseMsg::set_clientid(::std::string&& value) {
  
  clientid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ResponseMsg.clientID)
}
#endif
inline void ResponseMsg::set_clientid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  clientid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ResponseMsg.clientID)
}
inline void ResponseMsg::set_clientid(const void* value, size_t size) {
  
  clientid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ResponseMsg.clientID)
}
inline ::std::string* ResponseMsg::mutable_clientid() {
  
  // @@protoc_insertion_point(field_mutable:ResponseMsg.clientID)
  return clientid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ResponseMsg::release_clientid() {
  // @@protoc_insertion_point(field_release:ResponseMsg.clientID)
  
  return clientid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ResponseMsg::set_allocated_clientid(::std::string* clientid) {
  if (clientid != NULL) {
    
  } else {
    
  }
  clientid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), clientid);
  // @@protoc_insertion_point(field_set_allocated:ResponseMsg.clientID)
}

// int32 timestamp = 5;
inline void ResponseMsg::clear_timestamp() {
  timestamp_ = 0;
}
inline ::google::protobuf::int32 ResponseMsg::timestamp() const {
  // @@protoc_insertion_point(field_get:ResponseMsg.timestamp)
  return timestamp_;
}
inline void ResponseMsg::set_timestamp(::google::protobuf::int32 value) {
  
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:ResponseMsg.timestamp)
}

// bytes serverID = 6;
inline void ResponseMsg::clear_serverid() {
  serverid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ResponseMsg::serverid() const {
  // @@protoc_insertion_point(field_get:ResponseMsg.serverID)
  return serverid_.GetNoArena();
}
inline void ResponseMsg::set_serverid(const ::std::string& value) {
  
  serverid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ResponseMsg.serverID)
}
#if LANG_CXX11
inline void ResponseMsg::set_serverid(::std::string&& value) {
  
  serverid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ResponseMsg.serverID)
}
#endif
inline void ResponseMsg::set_serverid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  serverid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ResponseMsg.serverID)
}
inline void ResponseMsg::set_serverid(const void* value, size_t size) {
  
  serverid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ResponseMsg.serverID)
}
inline ::std::string* ResponseMsg::mutable_serverid() {
  
  // @@protoc_insertion_point(field_mutable:ResponseMsg.serverID)
  return serverid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ResponseMsg::release_serverid() {
  // @@protoc_insertion_point(field_release:ResponseMsg.serverID)
  
  return serverid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ResponseMsg::set_allocated_serverid(::std::string* serverid) {
  if (serverid != NULL) {
    
  } else {
    
  }
  serverid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), serverid);
  // @@protoc_insertion_point(field_set_allocated:ResponseMsg.serverID)
}

// bytes data = 7;
inline void ResponseMsg::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ResponseMsg::data() const {
  // @@protoc_insertion_point(field_get:ResponseMsg.data)
  return data_.GetNoArena();
}
inline void ResponseMsg::set_data(const ::std::string& value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ResponseMsg.data)
}
#if LANG_CXX11
inline void ResponseMsg::set_data(::std::string&& value) {
  
  data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ResponseMsg.data)
}
#endif
inline void ResponseMsg::set_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ResponseMsg.data)
}
inline void ResponseMsg::set_data(const void* value, size_t size) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ResponseMsg.data)
}
inline ::std::string* ResponseMsg::mutable_data() {
  
  // @@protoc_insertion_point(field_mutable:ResponseMsg.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ResponseMsg::release_data() {
  // @@protoc_insertion_point(field_release:ResponseMsg.data)
  
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ResponseMsg::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    
  } else {
    
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:ResponseMsg.data)
}

// -------------------------------------------------------------------

// PingReq

// int32 secondsSinceEpoch = 1;
inline void PingReq::clear_secondssinceepoch() {
  secondssinceepoch_ = 0;
}
inline ::google::protobuf::int32 PingReq::secondssinceepoch() const {
  // @@protoc_insertion_point(field_get:PingReq.secondsSinceEpoch)
  return secondssinceepoch_;
}
inline void PingReq::set_secondssinceepoch(::google::protobuf::int32 value) {
  
  secondssinceepoch_ = value;
  // @@protoc_insertion_point(field_set:PingReq.secondsSinceEpoch)
}

// -------------------------------------------------------------------

// PingResp

// int32 secondsSinceEpoch = 1;
inline void PingResp::clear_secondssinceepoch() {
  secondssinceepoch_ = 0;
}
inline ::google::protobuf::int32 PingResp::secondssinceepoch() const {
  // @@protoc_insertion_point(field_get:PingResp.secondsSinceEpoch)
  return secondssinceepoch_;
}
inline void PingResp::set_secondssinceepoch(::google::protobuf::int32 value) {
  
  secondssinceepoch_ = value;
  // @@protoc_insertion_point(field_set:PingResp.secondsSinceEpoch)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_Message_2eproto
